version: "3.9"

services:
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    command:
      - "--path.rootfs=/host"
  prometheus:
    image: quay.io/prometheus/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    extra_hosts:
      host.docker.internal: host-gateway
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/data:/prometheus:rslave
  grafana:
    image: docker.io/grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./grafana/data:/var/lib/grafana
  vaultwarden:
    image: docker.io/vaultwarden/server:alpine
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      WEBSOCKET_ENABLED: true
      SIGNUPS_ALLOWED: false
    volumes:
      - ./vaultwarden/data:/data
  etesync:
    build:
      context: ./etesync
      args:
        ETESYNC_TAG: v0.10.0
    container_name: etesync
    restart: unless-stopped
    volumes:
      - ./etesync/config:/config:ro
      - ./etesync/config/etesync.ini:/etc/etebase-server/etebase-server.ini:ro
      - ./etesync/data:/data
  caddy:
    image: docker.io/caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/config/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/config/generated:/config
      - ./caddy/data:/data
  restic:
    image: docker.io/wooseopkim/restic:latest
    container_name: restic
    restart: unless-stopped
    env_file: ./restic/.env
    entrypoint: /entrypoint.sh
    volumes:
      - .:/data:ro
      - ./restic/entrypoint.sh:/entrypoint.sh:ro
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 0 * * *"

